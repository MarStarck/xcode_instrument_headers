//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSDocument.h"

#import "NSAnimationDelegate.h"
#import "NSOpenSavePanelDelegate.h"
#import "NSOutlineViewDelegate.h"
#import "PFTInstrumentClient.h"
#import "XRDeviceObserver.h"
#import "XRProcessTargetedObject.h"
#import "XRTraceDelegate.h"

@class NSArray, NSDictionary, NSMutableArray, NSOperation, NSString, NSURL, NSViewAnimation, NSWindow, PFTProcess, PFTSelectedInstrumentDataElementList, PFTSelectedInstrumentList, PFTSelectedRunDataElementList, PFTWindowController, XRBusyModel, XRContext, XRDevice, XRFloatValueAnimation, XRInstrumentDebuggerWindowController, XRNextRecordingIssues, XRStrategyInfo, XRSymbolInspectorViewController, XRTrace;

@interface PFTTraceDocument : NSDocument <XRDeviceObserver, PFTInstrumentClient, NSOpenSavePanelDelegate, NSAnimationDelegate, NSOutlineViewDelegate, XRProcessTargetedObject, XRTraceDelegate>
{
    BOOL _lowerDisplayIsHidden;
    BOOL _t_lowerDisplayIsHidden;
    NSMutableArray *_navigationElements;
    XRContext *_rootContext;
    NSURL *_originalURL;
    BOOL _createdViaTemplate;
    NSDictionary *_creationTemplateData;
    XRContext *_restorationContext;
    NSDictionary *_template;
    struct CGRect _previousUpperRect;
    struct CGRect _previousLowerRect;
    struct CGRect _previousTrackRect;
    BOOL _doAnimationsInstantly;
    XRFloatValueAnimation *_instrumentsAnimation;
    XRTrace *_trace;
    double _currentTimeRecordLocation;
    struct XRTimeRange _selectedTimeRange;
    BOOL _expandTimeRangeAutomatically;
    BOOL _ignoreTimeSelections;
    XRSymbolInspectorViewController *_symbolicationController;
    BOOL _symbolicationControllerModelIsOutOfDate;
    NSOperation *_symbolicationControllerModelUpdateOp;
    NSOperation *_symbolicationControllerUIUpdateOp;
    NSString *_t_windowString;
    struct CGRect _t_TrackRect;
    struct CGRect _t_ControlRect;
    struct CGRect _t_leftContainer;
    NSString *_t_selectedInstrumentUUID;
    BOOL _t_ui_lowerDisplay_hidden;
    BOOL _t_ui_instruments_hidden;
    BOOL _t_ui_extendedDetailInspector_hidden;
    float _t_ui_dualSliderValue;
    double _t_inspectionTimeInSeconds;
    int _ui_record_state;
    int _ui_pause_state;
    BOOL _ui_loop_state;
    BOOL _ui_restart_state;
    int _ui_flag_state;
    BOOL _ui_flag_can_select_next;
    BOOL _ui_flag_can_select_previous;
    int _ui_range_state;
    int _ui_layout_state;
    BOOL _ui_extendedDetailInspector_hidden;
    BOOL _ui_lowerDisplay_hidden;
    BOOL _ui_instruments_hidden;
    XRStrategyInfo *_ui_selected_strategy;
    NSArray *_ui_available_strategies;
    XRBusyModel *_busyModel;
    BOOL _openDetailViewAfterRecording;
    BOOL _isClosingDocument;
    PFTProcess *_defaultProcess;
    NSString *_uuid;
    long long _selectedRunNumber;
    NSWindow *_progressWindow;
    BOOL _ignoreExtraSelection;
    BOOL _flagTableDeferReload;
    BOOL _observingDisplayedFlags;
    BOOL _observingRunIssues;
    NSString *_t_selected_strategy;
    double _lastInspectorWidth;
    unsigned int _runningTraceConnectionUUID;
    PFTWindowController *_mainWindowController;
    XRInstrumentDebuggerWindowController *_debuggerWindowController;
    BOOL _userChangingRunNumber;
    BOOL _loopEnabled;
    BOOL _closingDocument;
    BOOL _autoRestartEnabled;
    int _recordingState;
    int _pauseState;
    int _msgTracerCreationSource;
    int _ui_default_target_type_in_chooser;
    XRDevice *_targetDevice;
    NSString *_timeString;
    unsigned long long _recordingHeadTime;
    NSArray *_availableStrategies;
    PFTSelectedInstrumentDataElementList *_filterSettingsInspectorModel;
    PFTSelectedRunDataElementList *_runInfoInspectorModel;
    PFTSelectedInstrumentList *_selectedInstruments;
    NSViewAnimation *_eventViewerAnimation;
    long long _currentRunNumber;
    XRNextRecordingIssues *_nextRecordingIssues;
}

+ (BOOL)isAnimationRunning;
+ (void)setAnimationRunning:(BOOL)arg1;
+ (void)setPreservedLastDevice:(id)arg1;
+ (id)keyPathsForValuesAffectingDefaultTargetTypeForChooser;
+ (BOOL)runningAsAppleInternal;
+ (void)restoreRecentTarget:(id)arg1;
+ (id)mostRecentDocument;
+ (id)documentWithUUID:(id)arg1;
+ (void)initialize;
@property(retain, nonatomic) XRNextRecordingIssues *nextRecordingIssues; // @synthesize nextRecordingIssues=_nextRecordingIssues;
@property(nonatomic) long long currentRunNumber; // @synthesize currentRunNumber=_currentRunNumber;
@property int ui_default_target_type_in_chooser; // @synthesize ui_default_target_type_in_chooser=_ui_default_target_type_in_chooser;
@property(retain) NSViewAnimation *eventViewerAnimation; // @synthesize eventViewerAnimation=_eventViewerAnimation;
@property(readonly) PFTSelectedInstrumentList *selectedInstruments; // @synthesize selectedInstruments=_selectedInstruments;
@property(readonly) PFTSelectedRunDataElementList *runInfoInspectorModel; // @synthesize runInfoInspectorModel=_runInfoInspectorModel;
@property(readonly) PFTSelectedInstrumentDataElementList *filterSettingsInspectorModel; // @synthesize filterSettingsInspectorModel=_filterSettingsInspectorModel;
@property int msgTracerCreationSource; // @synthesize msgTracerCreationSource=_msgTracerCreationSource;
@property(retain, nonatomic) NSArray *availableStrategies; // @synthesize availableStrategies=_availableStrategies;
@property(nonatomic, getter=isAutoRestartEnabled) BOOL autoRestartEnabled; // @synthesize autoRestartEnabled=_autoRestartEnabled;
@property(nonatomic) unsigned long long recordingHeadTime; // @synthesize recordingHeadTime=_recordingHeadTime;
@property(nonatomic, getter=isClosingDocument) BOOL closingDocument; // @synthesize closingDocument=_closingDocument;
@property(retain, nonatomic) XRBusyModel *busyModel; // @synthesize busyModel=_busyModel;
@property(copy, nonatomic) NSString *timeString; // @synthesize timeString=_timeString;
@property(retain) XRDevice *targetDevice; // @synthesize targetDevice=_targetDevice;
@property(retain) PFTProcess *defaultProcess; // @synthesize defaultProcess=_defaultProcess;
@property(copy, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(nonatomic, getter=isLoopEnabled) BOOL loopEnabled; // @synthesize loopEnabled=_loopEnabled;
@property(nonatomic) int pauseState; // @synthesize pauseState=_pauseState;
@property(nonatomic) int recordingState; // @synthesize recordingState=_recordingState;
- (void).cxx_destruct;
- (id)dataElementsForContext:(id)arg1;
- (void)setMainWindowDisplayedStrategy:(id)arg1;
- (id)mainWindowDisplayedStrategy;
- (id)objectInScriptableInstrumentsAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfScriptableInstruments;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeFlags:(id)arg1;
- (void)unregisterFlags:(id)arg1;
- (void)registerFlags:(id)arg1;
- (void)setTargetsDevice:(id)arg1;
- (int)defaultTargetTypeForChooser;
- (BOOL)supportsTargetType:(int)arg1;
- (id)currentTargetDevice;
- (id)currentTargetProcess;
- (void)setTargetsInstrumentSpecific;
- (void)setTargetsAllProcesses;
- (void)setTargetsExistingProcess:(id)arg1;
- (void)setTargetsLaunchedProcess:(id)arg1;
- (void)_setTargetType:(int)arg1 withProcess:(id)arg2 device:(id)arg3 preserve:(BOOL)arg4;
- (void)_xrayReportError:(id)arg1;
- (void)_addInstrument:(id)arg1;
- (void)_createInstrument:(id)arg1;
- (void)replaceType:(id)arg1 withType:(id)arg2;
- (void)refreshedInstrumentType:(id)arg1;
- (void)attachInstrumentType:(id)arg1 toProcess:(id)arg2;
- (void)newInstrumentType:(id)arg1;
- (id)mainWindowController;
- (void)showInstrumentHelp:(id)arg1;
- (id)panel:(id)arg1 userEnteredFilename:(id)arg2 confirmed:(BOOL)arg3;
- (void)_handleDocumentFileChanges:(id)arg1;
- (void)showRuns:(id)arg1;
- (void)forwardHistory:(id)arg1;
- (void)backHistory:(id)arg1;
- (void)traceNewCall:(id)arg1;
- (void)exportData:(id)arg1;
- (void)exportPanelDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)saveAsPublicTemplate:(id)arg1;
- (void)toggleSpinMonitor:(id)arg1;
- (void)increaseTrackSize:(id)arg1;
- (void)decreaseTrackSize:(id)arg1;
- (void)trackSettings:(id)arg1;
- (void)setDisplayContext:(id)arg1 visible:(BOOL)arg2;
- (BOOL)isDisplayContextVisible:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)showSymbolSheet;
- (void)_initializeSymbolInspector;
- (void)openDetailView;
- (void)_openDetailViewNotification:(id)arg1;
- (void)setMiniToolbarVisible:(BOOL)arg1;
- (void)toggleLoopReplay:(id)arg1;
- (void)pauseTrace:(id)arg1;
- (void)recordTrace;
- (void)_recordTraceStarted:(BOOL)arg1;
- (void)toggleRecording:(id)arg1;
- (void)toggleRecordIfPossible;
- (BOOL)chooseExecutableAsDefaultTarget;
- (void)choosePidAsDefaultTarget;
- (void)buildNewInstrument:(id)arg1;
- (void)rangeAction:(id)arg1;
- (void)clearSelectedTimeRange:(id)arg1;
- (void)setTimeRangeEnd:(id)arg1;
- (void)setTimeRangeStart:(id)arg1;
- (void)_setEndTimeRange:(unsigned long long)arg1;
- (void)_setStartTimeRange:(unsigned long long)arg1;
@property(nonatomic) long long selectedRunNumber;
- (void)deleteRunNumber:(long long)arg1;
- (id)synthesizeRunForImportRunNumber:(long long)arg1;
- (void)_instrumentControlsRefreshed:(id)arg1;
- (void)_instrumentUnselected:(id)arg1;
- (void)_instrumentChangedSetupView:(id)arg1;
- (void)showSelfServiceDebugger:(id)arg1;
- (void)_runChanged:(id)arg1;
- (void)_selectedCoresChanged:(id)arg1;
- (void)_selectedThreadsChanged:(id)arg1;
- (void)_instrumentChangedSearchView:(id)arg1;
- (void)_instrumentChangedNavigationView:(id)arg1;
- (void)_instrumentChangedDetailView:(id)arg1;
- (void)_instrumentStateChanged:(id)arg1;
- (id)ui_selected_strategy;
- (void)setUi_selected_strategy:(id)arg1;
- (void)setStrategy:(id)arg1 withInfo:(id)arg2;
- (void)_updateSupportedStrategies;
- (id)reasonForNotBeingAbleToRecord;
- (void)validateUIState;
- (void)validateControls;
- (void)_validateControlsMainThreadCallback;
- (BOOL)isUITransforming;
- (void)_spinDetected:(id)arg1;
- (BOOL)displayEnabled;
- (void)moveToNextRun:(id)arg1;
- (void)moveToPreviousRun:(id)arg1;
- (void)analysisProgressDidChange;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (struct XRTimeRange)selectedTimeRange;
- (void)clearSelectedTimeRange;
- (void)inspectFlag:(id)arg1;
- (void)showFlagTable:(id)arg1;
@property(nonatomic) unsigned long long inspectionTime;
- (BOOL)isRecordingMasterTrack;
- (void)endRecordingMasterTrack;
- (BOOL)startRecordingMasterTrack;
- (void)moveToPreviousRun;
- (void)moveToNextRun;
- (void)_modifySelectedRunIndex:(BOOL)arg1;
- (BOOL)isRunning;
- (void)endRunWithReason:(unsigned long long)arg1;
- (BOOL)startRun;
- (BOOL)allInstrumentsSupportTargetType:(int)arg1;
- (void)zoomOut;
- (void)zoomIn;
- (void)snapTrackViewToFit;
- (void)_didEndCommand:(id)arg1;
- (void)_willEndCommand:(id)arg1;
- (void)_didStartCommand:(id)arg1;
- (void)closeDetailView;
- (void)_willStartCommand:(id)arg1;
- (void)_tick:(id)arg1;
- (void)_setTimeForStart:(double)arg1 end:(double)arg2;
- (void)_strategyFilterUpdateNotification:(id)arg1;
- (id)baseFilterForRunNumber:(long long)arg1 tableID:(unsigned int)arg2;
- (id)selectedInstrument;
- (id)trace;
- (id)allInstrumentsList;
- (void)displaySymbolInSource:(id)arg1 withConcreteSymbol:(id)arg2 withMarkerAtLine:(id)arg3 withCallTreeInformation:(id)arg4;
- (void)displayStackFrameInSource:(id)arg1;
- (id)iconForContext:(id)arg1;
- (void)displayContext:(id)arg1;
- (void)_openDataView;
- (void)_appDidChangeScreenParametersNotification:(id)arg1;
- (void)showWindows;
- (id)windowForSheet;
- (id)mainWindow;
- (void)makeWindowControllers;
- (void)restoreDocumentWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)close;
- (void)canCloseDocumentWithDelegate:(id)arg1 shouldCloseSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (BOOL)prepareBlankDocumentWithTitle:(id)arg1 error:(id *)arg2;
- (BOOL)prepareBlankDocument:(id *)arg1;
- (void)restoreWithTemplateData:(id)arg1;
- (id)templateData;
- (id)templateAction;
- (void)setTemplateAction:(id)arg1;
- (BOOL)prepareSavePanel:(id)arg1;
- (BOOL)writeSafelyToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (id)displayName;
- (void)_resetNameAndType;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)originalURL;
- (void)setOriginalURL:(id)arg1;
- (void)_initialProcessSelectionCallback:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)_traceDidAwake;
- (void)handleDeviceNotification:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCoding.h"

@class NSArray, NSDictionary, NSImage, NSObject<XRInstrumentTypeData>, NSSet, NSString, NSURL, PFTInstrumentPlugin;

@interface PFTInstrumentType : NSObject <NSCoding>
{
    NSImage *_icon;
    NSImage *_menuIcon;
    NSImage *_largeIcon;
    NSImage *_touchBarIcon;
    PFTInstrumentPlugin *_plugIn;
    NSString *_instrumentClass;
    NSString *_name;
    NSString *_version;
    NSString *_category;
    NSString *_description;
    unsigned int _deckUnits;
    NSArray *_keywords;
    NSString *_uuid;
    BOOL _beta;
    BOOL _deprecated;
    NSArray *_brushNames;
    NSString *_helpURL;
    NSURL *_iconURL;
    NSSet *_activatesAugmentations;
    NSDictionary *_supportedPlatforms;
    NSArray *_supportedServices;
    BOOL _simulatorRequiresService;
    NSArray *_requiredCapabilities;
    NSDictionary *_recordingAssertions;
    BOOL _usingLegacyRecordingOptions;
    NSDictionary *_recordingOptions;
    NSObject<XRInstrumentTypeData> *_data;
}

+ (id)typeWithPlugIn:(id)arg1 extension:(id)arg2;
@property(readonly) NSObject<XRInstrumentTypeData> *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (id)activatesAugmentations;
- (id)userInterfacePlanForRecordingControlState:(id)arg1 target:(id)arg2;
- (id)requiredExtensionURLs;
- (id)requiredSchemas:(id)arg1;
- (id)requiredTableSpecsWithRecordingControlState:(id)arg1 target:(id)arg2;
- (id)referencedParameterNames;
- (void)enumerateRecordingParameters:(CDUnknownBlockType)arg1;
- (id)description;
- (BOOL)deprecated;
- (BOOL)beta;
- (BOOL)isDeletable;
- (BOOL)isEditable;
- (BOOL)isInstrumentTemplate;
- (long long)caseInsensitiveCompare:(id)arg1;
- (BOOL)hasRecordingControls;
- (int)preferredTargetType;
- (BOOL)canLaunch;
- (BOOL)canAttachToAll;
- (BOOL)canAttach;
- (id)installedPackageName;
- (id)iconURL;
- (id)helpURL;
- (id)defaultBrushName;
- (id)brushNames;
- (BOOL)canReplay;
- (id)uuid;
- (void)addTransientKeywords:(id)arg1;
- (id)keywords;
- (unsigned int)deckUnits;
- (id)typeDescription;
- (id)category;
- (id)version;
- (id)name;
- (id)reasonForNotSupportingTarget:(id)arg1 device:(id)arg2 recordingOptions:(id)arg3;
- (id)reasonForNotSupportingDevice:(id)arg1;
- (BOOL)supportsPlatformForDevice:(id)arg1;
- (BOOL)supportsRecordingOption:(id)arg1 forDevice:(id)arg2;
- (id)serviceNameForDevice:(id)arg1;
- (BOOL)_supportsRecordingOption:(id)arg1 forDevice:(id)arg2;
- (id)_reasonForRecordingAssertionsForTarget:(id)arg1 device:(id)arg2 recordingOptions:(id)arg3;
- (id)_predicateVariablesForTarget:(id)arg1 device:(id)arg2 recordingOptions:(id)arg3;
- (id)_reasonForNotSupportingCapabilitiesForDevice:(id)arg1;
- (id)_reasonForNotSupportingServiceForDevice:(id)arg1;
- (id)_reasonForNotSupportingPlatformForDevice:(id)arg1;
- (id)_getUnsupportedDeviceStringForDevice:(id)arg1;
- (id)createInstrument;
- (Class)runClass;
- (Class)instrumentClass;
- (id)plugIn;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)unregisterType;
- (void)registerType;
- (id)initWithPlugIn:(id)arg1 data:(id)arg2;

@end


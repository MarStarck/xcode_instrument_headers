//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "DTApplicationObserver.h"
#import "DTApplicationWorkspaceClient.h"

@class DTKPCPU, DTKPKDebugCodes, DTXChannel, DTXConnection, NSArray, NSImage, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSSet, NSString, XRImportPlugIn;

@interface XRDevice : NSObject <DTApplicationWorkspaceClient, DTApplicationObserver>
{
    NSObject<OS_dispatch_queue> *_connectionGuardQueue;
    DTXConnection *_activeConnection;
    int _connectionCount;
    int _consecutiveFailedConnectionAttempts;
    int _forcedOfflineCount;
    BOOL _forcedOffline;
    NSObject<OS_dispatch_queue> *_installedApplicationsQueue;
    NSObject<OS_dispatch_queue> *_installedApplicationsUpdateQueue;
    NSMutableDictionary *_installedAppsByPath;
    NSMutableDictionary *_pidObservers;
    NSMutableDictionary *_logRecorders;
    NSMutableArray *_allCores;
    DTKPCPU *_cpu;
    BOOL _triedToLoadCPU;
    DTKPKDebugCodes *_kdebugEventSet;
    BOOL _triedToLoadSysmonInfo;
    NSSet *_sysmonProcessAttributes;
    NSSet *_sysmonSystemAttributes;
    NSSet *_sysmonCoalitionAttributes;
    BOOL _triedToLoadNetworkInterfaceInfo;
    NSArray *_networkInterfaceNames;
    NSSet *_netstatCountsAttributes;
    NSSet *_netstatTCPAttributes;
    NSSet *_netstatUDPAttributes;
    NSSet *_netstatRouteAttributes;
    NSMutableDictionary *_iconsByPid;
    NSMutableDictionary *_iconsByPath;
    NSMutableDictionary *_tapPlugInInstancesById;
    NSMutableArray *_dynamicTapPlugInInstances;
    NSMutableArray *_managedResources;
    struct _opaque_pthread_mutex_t _managedResourcesLock;
    unsigned int _deviceNumber;
    NSString *_deviceIdentifier;
    NSString *_deviceHostName;
    NSString *_deviceDisplayName;
    NSString *_rawDeviceDisplayName;
    NSString *_deviceDescription;
    NSString *_buildVersion;
    NSString *_productVersion;
    NSString *_productType;
    NSString *_modelUTI;
    NSString *_modelName;
    long long _symbolsState;
    NSString *_companionDeviceIdentifier;
    NSString *_activePairedWatchDeviceIdentifier;
    double _timeDifference;
    DTXChannel *_capabilitiesChannel;
    NSImage *_downsampledDeviceImage;
    DTXChannel *_deviceInfoService;
}

+ (id)deviceWithTemplateData:(id)arg1;
+ (id)commonCapabilityMap;
+ (void)initialize;
@property(retain) DTXChannel *deviceInfoService; // @synthesize deviceInfoService=_deviceInfoService;
@property(copy) NSImage *downsampledDeviceImage; // @synthesize downsampledDeviceImage=_downsampledDeviceImage;
@property(retain) DTXChannel *capabilitiesChannel; // @synthesize capabilitiesChannel=_capabilitiesChannel;
@property double timeDifference; // @synthesize timeDifference=_timeDifference;
@property(readonly, copy) NSString *activePairedWatchDeviceIdentifier; // @synthesize activePairedWatchDeviceIdentifier=_activePairedWatchDeviceIdentifier;
@property(readonly, copy) NSString *companionDeviceIdentifier; // @synthesize companionDeviceIdentifier=_companionDeviceIdentifier;
@property long long symbolsState; // @synthesize symbolsState=_symbolsState;
@property(copy) NSString *modelName; // @synthesize modelName=_modelName;
@property(copy) NSString *modelUTI; // @synthesize modelUTI=_modelUTI;
@property(copy) NSString *productType; // @synthesize productType=_productType;
@property(copy) NSString *productVersion; // @synthesize productVersion=_productVersion;
@property(copy) NSString *buildVersion; // @synthesize buildVersion=_buildVersion;
@property(copy) NSString *deviceDescription; // @synthesize deviceDescription=_deviceDescription;
@property(copy) NSString *rawDeviceDisplayName; // @synthesize rawDeviceDisplayName=_rawDeviceDisplayName;
@property(copy) NSString *deviceDisplayName; // @synthesize deviceDisplayName=_deviceDisplayName;
@property(copy) NSString *deviceHostName; // @synthesize deviceHostName=_deviceHostName;
@property(copy) NSString *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
@property(readonly) unsigned int deviceNumber; // @synthesize deviceNumber=_deviceNumber;
@property(readonly) int connectionCount; // @synthesize connectionCount=_connectionCount;
- (void).cxx_destruct;
- (void)returnManagedResourceToken:(id)arg1;
- (BOOL)canAcquireTokenForManagedResource:(unsigned long long)arg1;
- (id)acquireTokenForManagedResource:(unsigned long long)arg1;
@property(readonly) XRImportPlugIn *importPlugIn;
- (id)sharedTapPlugInForTableIDs:(id)arg1 runNumber:(long long)arg2 trace:(id)arg3;
- (id)sharedTapPlugInForTableSchema:(id)arg1;
- (id)netstatRouteAttributes;
- (id)netstatUDPAttributes;
- (id)netstatTCPAttributes;
- (id)netstatCountsAttributes;
- (id)networkInterfaceNames;
- (void)_loadNetstatInfo;
- (id)_loadNetstatRouteAttributes;
- (id)_loadNetstatUDPAttributes;
- (id)_loadNetstatTCPAttributes;
- (id)_loadNetstatCountsAttributes;
- (id)_networkInterfaceNames;
- (id)sysmonCoalitionAttributes;
- (id)sysmonSystemAttributes;
- (id)sysmonProcessAttributes;
- (void)_loadSysmonInfo;
- (id)_loadSysmonCoalitionAttributes;
- (id)_loadSysmonSystemAttributes;
- (id)_loadSysmonProcessAttributes;
- (id)dtkpCPU;
- (id)supportedKDebugEvents;
- (id)_dtkpCPU:(id *)arg1;
- (id)_supportedKDebugEvents:(id *)arg1;
- (struct AuthorizationOpaqueRef *)obtainAuthorizatonForDTrace;
- (BOOL)authorize:(int)arg1;
- (void)simulateMemoryWarning:(id)arg1;
- (void)activateProcess:(id)arg1;
- (void)terminateProcess:(id)arg1;
- (BOOL)resumeProcess:(id)arg1;
- (BOOL)suspendProcess:(id)arg1;
- (int)launchProcess:(id)arg1 suspended:(BOOL)arg2 error:(id *)arg3;
- (void)recordLogsForPid:(int)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)observersForPid:(int)arg1;
- (void)removeObserver:(id)arg1 forPid:(int)arg2;
- (void)addObserver:(id)arg1 forPid:(int)arg2;
- (void)enableLiveSymbolicatorService:(BOOL)arg1;
- (void)enableTerminatedPidCaching:(BOOL)arg1;
- (BOOL)supportsKernelBacktracing;
- (void)fixupSymbolicator:(struct _CSTypeRef)arg1;
- (struct _CSTypeRef)createKernelSymbolicator;
- (struct _CSTypeRef)createSymbolicatorForPid:(int)arg1;
- (id)architecturesForPath:(id)arg1;
- (BOOL)executableIsRestricted:(id)arg1 launchOptions:(id)arg2;
- (BOOL)isRunningPid:(int)arg1;
- (id)environmentForPid:(int)arg1;
- (id)execnameForPid:(int)arg1;
- (id)executablePathForPid:(int)arg1;
- (id)iconNameForExecutableName:(id)arg1;
- (id)iconForAppPath:(id)arg1 executableName:(id)arg2;
@property(copy) NSImage *deviceSmallRepresentationIcon;
- (id)_iconForPid:(int)arg1 smallSize:(BOOL)arg2;
- (id)smallIconForPid:(int)arg1;
- (id)iconForPid:(int)arg1;
- (id)userForUID:(id)arg1;
@property(readonly) id <XRFileSystem> fileSystem;
- (id)targetTopicsWithSelectedPath:(id)arg1;
- (void)alternateAction;
- (id)alternateText;
- (BOOL)daemonsSupported;
- (BOOL)supportsTransparentApplicationLifecycle;
- (void)sendInput:(id)arg1 toPid:(int)arg2;
- (BOOL)supportsDeviceIO;
- (BOOL)supportsStandardInput;
- (void)didRecordLogMessage:(id)arg1;
- (void)removeFilesystemObserver:(id)arg1;
- (void)addFilesystemObserver:(id)arg1 forPaths:(id)arg2;
@property(readonly, copy) NSImage *defaultAppIcon;
@property(readonly) BOOL allowsChoosingExecutable;
- (id)processWithExecutablePath:(id)arg1 bundleIdentifier:(id)arg2 arguments:(id)arg3 environment:(id)arg4 launchOptions:(id)arg5;
- (id)_lookupPathForBundleIdentifier:(id)arg1;
- (void)clearPreviousExecutables;
- (void)addPreviousExecutable:(id)arg1;
@property(readonly) NSArray *previousExecutables;
@property(readonly) NSArray *runningProcesses;
- (void)preflightDevice;
- (id)targetControlDataElementsForProcess:(id)arg1;
- (id)launchControlDataElementsForProcess:(id)arg1;
@property(readonly) NSString *externalSDKPath;
@property(readonly) NSString *internalSDKPath;
- (id)allCapabilityVersions;
- (int)versionForCapability:(id)arg1;
- (void)_overrideCapabilities:(id)arg1 withRecordOptionsVersion:(int)arg2;
- (id)displayNameForNetworkInterface:(id)arg1;
- (id)deviceArchitecture;
- (void)applicationUninstalled:(id)arg1;
- (void)applicationInstalled:(id)arg1;
- (id)processFromSerialized:(id)arg1;
- (BOOL)updateInstalledExecutables;
- (void)clearInstalledExecutables;
- (void)removeInstalledExecutables:(id)arg1;
- (void)addInstalledExecutables:(id)arg1;
@property(readonly) NSArray *unrestrictedAppExtensions;
@property(readonly) NSArray *unrestrictedExecutables;
@property(readonly) NSArray *installedExecutables;
- (id)_installedMatchingType:(int)arg1 unrestrictedOnly:(BOOL)arg2;
- (void)_faultDeviceImage;
- (void)_resetForcedOfflineStatus;
@property(readonly) BOOL isForcedOffline;
- (id)validationState;
@property(readonly) int deviceInfoVersion;
- (void)teardownConnection;
- (void)prepareConnection:(id)arg1;
- (void)disconnect;
- (id)makeConnection;
- (id)connection;
- (id)noFaultConnection;
- (id)_faultConnection;
- (void)_connectionInterrupted:(id)arg1;
- (id)allCores;
- (id)cpuDescription;
- (int)speedOfCpus;
- (int)numberOfCpus;
- (int)numberOfPhysicalCpus;
- (BOOL)currentDeviceTime:(struct _XRDeviceTimeInfo *)arg1;
@property(readonly) BOOL isAncientDevice;
@property(readonly) BOOL isUnactivatedDevice;
@property(readonly) BOOL isReadyToUse;
@property(readonly) BOOL isDevelopmentDevice;
- (void)bootDeviceWaitForCompletion:(BOOL)arg1;
- (void)bootDevice;
- (void)xcodeWasTerminated:(unsigned int)arg1;
- (void)xcodeWasLaunched:(unsigned int)arg1;
@property(readonly, retain) NSString *symbolsStateString;
- (void)downloadSymbols;
- (void)symbolsDownloadedAtPath:(id)arg1;
- (BOOL)productVersionIsAtLeastVersion:(id)arg1;
@property(readonly) BOOL isEligibleToBeCompanion;
@property(readonly) NSString *platformVersionForMessageTracer;
@property(readonly) NSString *marketizedPlatformName;
@property(readonly) NSString *platformName;
@property(readonly) BOOL isWireless;
@property(readonly) BOOL isSimulator;
@property(readonly) BOOL isAppleTV;
@property(readonly) BOOL isWatch;
@property(readonly) BOOL isiPad;
@property(readonly) BOOL isiPhone;
@property(readonly) BOOL isAppleInternal;
@property(readonly) BOOL isOnLine;
@property(readonly) BOOL isLocal;
- (id)launchDaemonPaths;
- (id)launchAgentPaths;
@property(readonly, copy) NSString *deviceRootPath;
- (id)templateData;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithTemplateData:(id)arg1;
- (id)initWithIdentifier:(id)arg1;
- (void)_setupManagedResources;
@property(readonly, copy) NSString *description;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end


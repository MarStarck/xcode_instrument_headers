//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "XRDeviceObserver.h"
#import "XRIssueResponder.h"
#import "XRTemplateProtocol.h"

@class DVTSystemActivityToken, NSAttributedString, NSMapTable, NSMutableArray, NSMutableDictionary, NSOperation, NSString, NSTimer, NSURL, PFTInstrumentCommand, PFTInstrumentList, XRAnalysisCoreSpace, XRAugmentationManager, XRCoreDataIssueResponder, XRDevice, XRFlagController, XRInstrumentControlState, XRIntKeyedDictionary, XRModeStore, XRNextRecordingIssues, XRRecordingOptions, XRRunListData, XRStrategyManager, XRUniqueIssueAccumulator, XRWorkTracker;

@interface XRTrace : NSObject <XRDeviceObserver, XRTemplateProtocol, XRIssueResponder>
{
    NSURL *_outputURL;
    BOOL _shouldKeepOriginalDirectory;
    NSURL *_previousTemplateURL;
    PFTInstrumentList *_allInstrumentsList;
    PFTInstrumentCommand *_instrumentCommand;
    XRRunListData *_runData;
    NSAttributedString *_templateDescription;
    NSString *_templateIconURL;
    NSString *_documentUUID;
    NSTimer *_timerTick;
    NSTimer *_timerHalfTick;
    NSTimer *_timeLimitTimer;
    BOOL _paused;
    BOOL _verbose;
    XRFlagController *_flagController;
    XRWorkTracker *_workTracker;
    XRStrategyManager *_strategyManager;
    XRDevice *_device;
    NSMutableDictionary *_cpuFormulaNamesToText;
    NSMutableDictionary *_cpuPMFormulasDictionary;
    id <XRTraceDelegate> _delegate;
    BOOL _localKTraceIsBlessed;
    BOOL _analysisCoreRunWantsSymbols;
    NSMapTable *_currentRunsTapTokens;
    NSMapTable *_currentRunsImportTokens;
    XRIntKeyedDictionary *_existenceProjectorsByEngTypeByRun;
    XRAnalysisCoreSpace *_coreSpace;
    XRIntKeyedDictionary *_coresByRunNumber;
    BOOL _needsBindingSolutionForNextRun;
    NSOperation *_lastHorizonMovementOp;
    NSMutableDictionary *_uiStateMetadata;
    DVTSystemActivityToken *_suspendIdleToken;
    NSMutableArray *_windowModeFlags;
    BOOL _needToDisableLiveSymbolicatorServiceForAllDevices;
    BOOL _isEndingCommand;
    XRCoreDataIssueResponder *_issueResponder;
    XRUniqueIssueAccumulator *_prototypeIssueAccumulator;
    XRAugmentationManager *_augmentationManager;
    XRInstrumentControlState *_recordingControlState;
    XRRecordingOptions *_recordingOptions;
    XRNextRecordingIssues *_nextRecordingIssues;
    XRModeStore *_modeStore;
}

+ (id)impliedUIMetadataClasses;
+ (id)templateItemsRetainBlank:(BOOL)arg1;
+ (id)defaultAndCustomTemplatePaths;
+ (id)customTemplatePaths;
+ (id)defaultTemplatePaths;
+ (id)pathForPlatform:(id)arg1;
+ (void)registerTraceLoadingCapabilities:(id)arg1;
+ (void)initialize;
+ (BOOL)isRunningCommandLine;
@property(readonly, nonatomic) XRModeStore *modeStore; // @synthesize modeStore=_modeStore;
@property(retain, nonatomic) XRNextRecordingIssues *nextRecordingIssues; // @synthesize nextRecordingIssues=_nextRecordingIssues;
@property(retain, nonatomic) XRRecordingOptions *recordingOptions; // @synthesize recordingOptions=_recordingOptions;
@property(readonly, nonatomic) XRInstrumentControlState *recordingControlState; // @synthesize recordingControlState=_recordingControlState;
@property(readonly, nonatomic) XRAugmentationManager *augmentationManager; // @synthesize augmentationManager=_augmentationManager;
@property(retain, nonatomic) XRUniqueIssueAccumulator *prototypeIssueAccumulator; // @synthesize prototypeIssueAccumulator=_prototypeIssueAccumulator;
@property(retain, nonatomic) XRCoreDataIssueResponder *issueResponder; // @synthesize issueResponder=_issueResponder;
- (void).cxx_destruct;
- (void)setValue:(id)arg1 forURL:(id)arg2;
- (id)valueForURL:(id)arg1;
- (void)_updateAugmentations;
- (id)threadsByTIDInRunNumber:(long long)arg1;
- (id)usernameForProcessUID:(unsigned int)arg1 runNumber:(long long)arg2;
- (id)registerProcessUID:(unsigned int)arg1 runNumber:(long long)arg2;
- (id)pidsForRunNumber:(long long)arg1;
- (id)processWithPid:(int)arg1 runNumber:(long long)arg2;
- (id)registerProcessWithPid:(int)arg1 runNumber:(long long)arg2;
- (void)setTimeInfo:(const struct _XRDeviceTimeInfo *)arg1 forDevice:(id)arg2 andRunNumber:(long long)arg3;
- (struct _XRDeviceTimeInfo)timeInfoForDevice:(id)arg1 andRunNumber:(long long)arg2;
- (id)presentStrategyIdentifiersInRunNumber:(long long)arg1;
- (id)strategyManager;
- (id)deviceForRunNumber:(long long)arg1;
- (id)workTracker;
- (void)unregisterFlag:(id)arg1 forRunNumber:(long long)arg2;
- (void)registerFlag:(id)arg1 forRun:(long long)arg2;
- (void)registerFlag:(id)arg1 forRunNumber:(long long)arg2 displayed:(BOOL)arg3;
- (void)_selectedRunChanged:(id)arg1;
- (id)flagController;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)enumerateRecordingParameters:(CDUnknownBlockType)arg1;
- (void)close;
- (void)setDocumentUUID:(id)arg1;
- (id)documentUUID;
- (BOOL)saveDocument:(id)arg1 error:(id *)arg2;
- (BOOL)_copySubPath:(id)arg1 fromOldArchivePath:(id)arg2 toNewArchivePath:(id)arg3 addToPathsList:(id)arg4 error:(id *)arg5;
- (BOOL)_copyDataForRunNumber:(long long)arg1 instrument:(id)arg2 fromOldArchivePath:(id)arg3 toNewArchivePath:(id)arg4 addToPathsList:(id)arg5 error:(id *)arg6;
- (void)_cleanPaths:(id)arg1 excluding:(id)arg2;
- (BOOL)_conditionalCreateOutputDirectory:(id)arg1 addToPathsList:(id)arg2 error:(id *)arg3;
- (BOOL)loadDocument:(id)arg1 error:(id *)arg2;
- (BOOL)saveTemplate:(id)arg1 asPartOfDocument:(BOOL)arg2 error:(id *)arg3;
- (BOOL)loadTemplate:(id)arg1 outputURL:(id)arg2 preserveRunHistory:(BOOL)arg3 error:(id *)arg4;
- (id)templateDescription;
- (void)setTemplateDescription:(id)arg1;
- (id)templateIconURL;
- (void)setTemplateIconURL:(id)arg1;
- (void)_runTimerLimitReached:(id)arg1;
- (void)_runTimerHalfTickFireMethod:(id)arg1;
- (void)_runTimerTickFireMethod:(id)arg1;
- (unsigned long long)traceRelativeTimestampForCurrentRun;
- (void)_bumpEventHorizonTo:(unsigned long long)arg1;
- (void)startAdHocInstrument:(id)arg1;
- (void)_runDidEnd:(id)arg1;
- (void)togglePauseCommand;
- (void)endCommandWithReason:(unsigned long long)arg1 time:(double)arg2;
- (void)endCommandWithReason:(unsigned long long)arg1;
- (BOOL)startCommandWithPurpose:(unsigned long long)arg1 time:(double)arg2;
- (BOOL)startCommandWithPurpose:(unsigned long long)arg1;
- (void)_enableLiveSymbolicatorServiceForAllDevices:(BOOL)arg1;
- (void)_releaseSuspendToken;
- (void)_acquireSuspendToken;
- (id)synthesizeRunDataForImportRunNumber:(long long)arg1;
- (void)_recordUIPlansForRunNumber:(long long)arg1;
- (void)_recordRunInformation;
- (BOOL)canPerformCommand;
- (void)updateNextRecordingIssues;
- (void)deleteRunNumber:(long long)arg1;
- (void)promoteRunNumber:(long long)arg1;
- (id)runData;
- (void)setRunData:(id)arg1;
- (BOOL)isImporting;
- (BOOL)isRunning;
- (void)setInstrumentCommand:(id)arg1;
- (id)instrumentCommand;
- (id)peersOfInstrument:(id)arg1;
- (id)instrumentWithUUID:(id)arg1;
- (id)allInstrumentsList;
- (void)reportError:(id)arg1;
- (void)reportErrorString:(id)arg1;
- (void)handleIssue:(id)arg1 type:(unsigned long long)arg2 from:(id)arg3;
- (void)setVerbose:(BOOL)arg1;
- (BOOL)verbose;
- (id)outputURL;
- (void)setOutputURL:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)handleDeviceNotification:(id)arg1;
- (void)recoverCoreBreachInRunNumber:(long long)arg1 group:(id)arg2;
- (id)coreForRunNumber:(long long)arg1;
- (id)coreSpace;
- (void)dealloc;
- (id)initForCommandLine:(BOOL)arg1;
- (id)allCoresForRunNumber:(long long)arg1;
- (int)numberOfCpusForRunNumber:(long long)arg1;
- (void)recordHardwareInformation:(id)arg1;
- (void)recordHardwareInformation:(id)arg1 forRunNumber:(long long)arg2;
- (id)temporaryFormulaEvaluatorForFormulaText:(id)arg1;
- (id)formulaEvaluatorNamed:(id)arg1;
- (void)removeFormulaNamed:(id)arg1;
- (void)modifyFormulaNamed:(id)arg1 withNewText:(id)arg2;
- (void)addFormulaNamed:(id)arg1 text:(id)arg2;
- (id)cpuFormulaNamesToText;
- (void)loadPMDevice;
- (void)setTargetDevice:(id)arg1;
- (id)targetDevice;
- (void)targetProcessOrDeviceChanged:(id)arg1;
- (void)awakeFromTemplate;
- (void)_generateRunInfoForCommand:(id)arg1 reason:(unsigned long long)arg2 withAdjustedStart:(double)arg3 importString:(id)arg4;
- (void)_validateAttributesInBindingSolution;
- (void)refreshBindingSolutionForNextRun;
- (void)setNeedsBindingSolution;
- (id)_disengageCoreAfterOperation:(id)arg1 endTime:(unsigned long long)arg2;
- (void)_refreshExistenceProjectorsForRun:(long long)arg1;
- (id)installExistenceProjectorsForRun:(long long)arg1 afterOperation:(id)arg2;
- (id)_presentStrategyIdentifiersInRunNumber:(long long)arg1;
- (void)_endImportingForAnalysisCore;
- (void)_endRecordingForAnalysisCore;
- (void)_stopRecordingForAnalysisCore;
- (void)voteForEpoch:(id)arg1;
- (BOOL)_startImportingIntoAnalysisCore;
- (void)_startRecordingIntoAnalysisCore;
- (id)_internalStartOrImport;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

